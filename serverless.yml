# "org" ensures this Service is used with the correct Serverless Framework Access Key.
service: aws-node-express-dynamodb-api
frameworkVersion: "4"

stages:
  default:
    params:
      itemTableName: "item-table-${sls:stage}"
      userTableName: "user-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [userTable, Arn]
            - Fn::GetAtt: [itemTable, Arn]
  environment:
    USER_TABLE: ${param:userTableName}
    ITEM_TABLE: ${param:itemTableName}
functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:userTableName}
    itemTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: itemId
            AttributeType: S
        KeySchema:
          - AttributeName: itemId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:itemTableName}
